// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Chapter 8 code. Matches the snapshot. 1`] = `
{
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": {
    "ApiGatewaytestchapter8restapiEndpoint23EAD1F9": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
            },
            ".execute-api.us-east-1.",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiGatewaytestchapter8restapiDeploymentStagedev9764A98F",
            },
            "/",
          ],
        ],
      },
    },
    "FrontendURLtest": {
      "Value": {
        "Fn::GetAtt": [
          "WebBuckettest1D7CD72B",
          "DomainName",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiGatewaytestBackendAliasRecord48DF4F4F": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "ApiGatewaytestchapter8restapiCustomDomainA2CF6E7F",
              "RegionalDomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "ApiGatewaytestchapter8restapiCustomDomainA2CF6E7F",
              "RegionalHostedZoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "dev-backend-cdk-book.cdkbookmurat.click.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "ApiGatewaytestchapter8restapi3A4093A6": {
      "Properties": {
        "Description": "serverless api using lambda functions",
        "Name": "chapter-8-rest-api-test",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiGatewaytestchapter8restapiAccount06325B92": {
      "DependsOn": [
        "ApiGatewaytestchapter8restapi3A4093A6",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiGatewaytestchapter8restapiCloudWatchRole83715732",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "ApiGatewaytestchapter8restapiCloudWatchRole83715732": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiGatewaytestchapter8restapiCustomDomainA2CF6E7F": {
      "Properties": {
        "DomainName": "dev-backend-cdk-book.cdkbookmurat.click",
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL",
          ],
        },
        "RegionalCertificateArn": {
          "Fn::GetAtt": [
            "CertificateCertificateRequestorResource2890C6B7",
            "Arn",
          ],
        },
        "SecurityPolicy": "TLS_1_2",
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "ApiGatewaytestchapter8restapiCustomDomainMapChapter8StackApiGatewaytestchapter8restapi733D8AB752589F76": {
      "Properties": {
        "DomainName": {
          "Ref": "ApiGatewaytestchapter8restapiCustomDomainA2CF6E7F",
        },
        "RestApiId": {
          "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
        },
        "Stage": {
          "Ref": "ApiGatewaytestchapter8restapiDeploymentStagedev9764A98F",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "ApiGatewaytestchapter8restapiDeploymentAD786E17432c294898f54e5e1731cc30aaf947a8": {
      "DependsOn": [
        "ApiGatewaytestchapter8restapiGETCD04A292",
        "ApiGatewaytestchapter8restapihealthcheckGETF8F2C587",
        "ApiGatewaytestchapter8restapihealthcheckOPTIONS6824BB5B",
        "ApiGatewaytestchapter8restapihealthcheckB5EE52D3",
        "ApiGatewaytestchapter8restapiOPTIONS0DB6F4C6",
        "ApiGatewaytestchapter8restapiPOSTE778AEF3",
      ],
      "Properties": {
        "Description": "serverless api using lambda functions",
        "RestApiId": {
          "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiGatewaytestchapter8restapiDeploymentStagedev9764A98F": {
      "DependsOn": [
        "ApiGatewaytestchapter8restapiAccount06325B92",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiGatewaytestchapter8restapiDeploymentAD786E17432c294898f54e5e1731cc30aaf947a8",
        },
        "RestApiId": {
          "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
        },
        "StageName": "dev",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiGatewaytestchapter8restapiGETApiPermissionChapter8StackApiGatewaytestchapter8restapi733D8AB7GET3A37BC35": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewaytestdynamoget27D16C29",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:721520867440:",
              {
                "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
              },
              "/",
              {
                "Ref": "ApiGatewaytestchapter8restapiDeploymentStagedev9764A98F",
              },
              "/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewaytestchapter8restapiGETApiPermissionTestChapter8StackApiGatewaytestchapter8restapi733D8AB7GETBBD8F5A7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewaytestdynamoget27D16C29",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:721520867440:",
              {
                "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
              },
              "/test-invoke-stage/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewaytestchapter8restapiGETCD04A292": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGatewaytestdynamoget27D16C29",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewaytestchapter8restapi3A4093A6",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewaytestchapter8restapiOPTIONS0DB6F4C6": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewaytestchapter8restapi3A4093A6",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewaytestchapter8restapiPOSTApiPermissionChapter8StackApiGatewaytestchapter8restapi733D8AB7POST6D7DB16B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewaytestdynamopost31E3311E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:721520867440:",
              {
                "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
              },
              "/",
              {
                "Ref": "ApiGatewaytestchapter8restapiDeploymentStagedev9764A98F",
              },
              "/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewaytestchapter8restapiPOSTApiPermissionTestChapter8StackApiGatewaytestchapter8restapi733D8AB7POSTF95C1517": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewaytestdynamopost31E3311E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:721520867440:",
              {
                "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
              },
              "/test-invoke-stage/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewaytestchapter8restapiPOSTE778AEF3": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGatewaytestdynamopost31E3311E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewaytestchapter8restapi3A4093A6",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewaytestchapter8restapihealthcheckB5EE52D3": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewaytestchapter8restapi3A4093A6",
            "RootResourceId",
          ],
        },
        "PathPart": "healthcheck",
        "RestApiId": {
          "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiGatewaytestchapter8restapihealthcheckGETApiPermissionChapter8StackApiGatewaytestchapter8restapi733D8AB7GEThealthcheck46FF5A8D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewaytesthealthchecklambdaC9F6C9EC",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:721520867440:",
              {
                "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
              },
              "/",
              {
                "Ref": "ApiGatewaytestchapter8restapiDeploymentStagedev9764A98F",
              },
              "/GET/healthcheck",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewaytestchapter8restapihealthcheckGETApiPermissionTestChapter8StackApiGatewaytestchapter8restapi733D8AB7GEThealthcheckD2B154A8": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewaytesthealthchecklambdaC9F6C9EC",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:721520867440:",
              {
                "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
              },
              "/test-invoke-stage/GET/healthcheck",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewaytestchapter8restapihealthcheckGETF8F2C587": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGatewaytesthealthchecklambdaC9F6C9EC",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "ApiGatewaytestchapter8restapihealthcheckB5EE52D3",
        },
        "RestApiId": {
          "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewaytestchapter8restapihealthcheckOPTIONS6824BB5B": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "ApiGatewaytestchapter8restapihealthcheckB5EE52D3",
        },
        "RestApiId": {
          "Ref": "ApiGatewaytestchapter8restapi3A4093A6",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewaytestdynamoget27D16C29": {
      "DependsOn": [
        "ApiGatewaytestdynamogetServiceRoleDefaultPolicyC80FAEBC",
        "ApiGatewaytestdynamogetServiceRoleD2150BC5",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-721520867440-us-east-1",
          "S3Key": "978dc9e8525eec7cfbbc6ab920fd7304b3dc352d7919641663538e09b4c3cd6f.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_ENV": "test",
            "REGION": "us-east-1",
            "TABLE_NAME": {
              "Ref": "DynamotestDynamoTabletestFDC1D2D6",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiGatewaytestdynamogetServiceRoleD2150BC5",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiGatewaytestdynamogetLogRetention7C9CC8FB": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiGatewaytestdynamoget27D16C29",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiGatewaytestdynamogetServiceRoleD2150BC5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiGatewaytestdynamogetServiceRoleDefaultPolicyC80FAEBC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DynamotestDynamoTabletestFDC1D2D6",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiGatewaytestdynamogetServiceRoleDefaultPolicyC80FAEBC",
        "Roles": [
          {
            "Ref": "ApiGatewaytestdynamogetServiceRoleD2150BC5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiGatewaytestdynamopost31E3311E": {
      "DependsOn": [
        "ApiGatewaytestdynamopostServiceRoleDefaultPolicyC544D58C",
        "ApiGatewaytestdynamopostServiceRole19643F09",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-721520867440-us-east-1",
          "S3Key": "8c992e47062b1dc8ecf35b47f7f6a0b47a6ec9dcde678f15f68cac1fd0850b3e.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_ENV": "test",
            "REGION": "us-east-1",
            "TABLE_NAME": {
              "Ref": "DynamotestDynamoTabletestFDC1D2D6",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiGatewaytestdynamopostServiceRole19643F09",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiGatewaytestdynamopostLogRetentionDB0F45B6": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiGatewaytestdynamopost31E3311E",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiGatewaytestdynamopostServiceRole19643F09": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiGatewaytestdynamopostServiceRoleDefaultPolicyC544D58C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DynamotestDynamoTabletestFDC1D2D6",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiGatewaytestdynamopostServiceRoleDefaultPolicyC544D58C",
        "Roles": [
          {
            "Ref": "ApiGatewaytestdynamopostServiceRole19643F09",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiGatewaytesthealthchecklambdaC9F6C9EC": {
      "DependsOn": [
        "ApiGatewaytesthealthchecklambdaServiceRoleD38769B1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-721520867440-us-east-1",
          "S3Key": "24b905c128cd19db8a89764c2305c8bad2e0bcd8bbd29094d959790f517561f7.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ApiGatewaytesthealthchecklambdaServiceRoleD38769B1",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiGatewaytesthealthchecklambdaLogRetentionEF38BD4B": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ApiGatewaytesthealthchecklambdaC9F6C9EC",
              },
            ],
          ],
        },
        "RetentionInDays": 14,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ApiGatewaytesthealthchecklambdaServiceRoleD38769B1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CertificateCertificateRequestorFunction5E845413": {
      "DependsOn": [
        "CertificateCertificateRequestorFunctionServiceRoleDefaultPolicy3C8845BC",
        "CertificateCertificateRequestorFunctionServiceRoleC04C13DA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-721520867440-us-east-1",
          "S3Key": "8ddf29ab619460567d3cda58de2ff1bf0f6e95d8822ff630ec58a4d52ed1fa67.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "CertificateCertificateRequestorFunctionServiceRoleC04C13DA",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CertificateCertificateRequestorFunctionServiceRoleC04C13DA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CertificateCertificateRequestorFunctionServiceRoleDefaultPolicy3C8845BC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/DUMMY",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CertificateCertificateRequestorFunctionServiceRoleDefaultPolicy3C8845BC",
        "Roles": [
          {
            "Ref": "CertificateCertificateRequestorFunctionServiceRoleC04C13DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CertificateCertificateRequestorResource2890C6B7": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DomainName": "cdkbookmurat.click",
        "HostedZoneId": "DUMMY",
        "Region": "us-east-1",
        "ServiceToken": {
          "Fn::GetAtt": [
            "CertificateCertificateRequestorFunction5E845413",
            "Arn",
          ],
        },
        "SubjectAlternativeNames": [
          "*.cdkbookmurat.click",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-721520867440-us-east-1",
          "S3Key": "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da.zip",
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "WebBucketDeploymenttestAwsCliLayer41AD4280",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-721520867440-us-east-1",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-721520867440-us-east-1/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebBuckettest1D7CD72B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebBuckettest1D7CD72B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomDynamodbSeederCustomDynamodbSeeder3D3D7F10": {
      "DependsOn": [
        "CustomDynamodbSeederCustomDynamodbSeederServiceRoleDefaultPolicy6C04255C",
        "CustomDynamodbSeederCustomDynamodbSeederServiceRole5FC6AEF8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-721520867440-us-east-1",
          "S3Key": "5a4b935f782c9cd054339f7b9db58ed262362c2647032bbaa4a0ca425ad26871.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomDynamodbSeederCustomDynamodbSeederServiceRole5FC6AEF8",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomDynamodbSeederCustomDynamodbSeederServiceRole5FC6AEF8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomDynamodbSeederCustomDynamodbSeederServiceRoleDefaultPolicy6C04255C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:BatchWriteItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DynamotestDynamoTabletestFDC1D2D6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomDynamodbSeederCustomDynamodbSeederServiceRoleDefaultPolicy6C04255C",
        "Roles": [
          {
            "Ref": "CustomDynamodbSeederCustomDynamodbSeederServiceRole5FC6AEF8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-721520867440-us-east-1",
          "S3Key": "e57c1acaa363d7d2b81736776007a7091bc73dff4aeb8135627c4511a51e7dca.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "WebBuckettest1D7CD72B",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DynamotestDynamoInlineSeedertestCustomResource4ED60FE0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Seeds": {
          "InlineSeeds": "[{"id":"033f8bf9-57ab-4f03-8f43-eabedc569830","todo_name":"First todo","todo_description":"That's a todo for demonstration purposes","todo_completed":true}]",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDynamodbSeederCustomDynamodbSeeder3D3D7F10",
            "Arn",
          ],
        },
        "TableName": {
          "Ref": "DynamotestDynamoTabletestFDC1D2D6",
        },
      },
      "Type": "Custom::DynamodbSeeder",
      "UpdateReplacePolicy": "Delete",
    },
    "DynamotestDynamoTabletestFDC1D2D6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "TableName": "todolist-test",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "FrontendAliasRecordtestC1E84708": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "FrontendDistributiontest4E4F0DEB",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "dev-frontend-cdk-book.cdkbookmurat.click.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "FrontendDistributiontest4E4F0DEB": {
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "dev-frontend-cdk-book.cdkbookmurat.click",
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "Chapter8StackFrontendDistributiontestOrigin189C281E9",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "WebBuckettest1D7CD72B",
                          "WebsiteURL",
                        ],
                      },
                    ],
                  },
                ],
              },
              "Id": "Chapter8StackFrontendDistributiontestOrigin189C281E9",
            },
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Fn::GetAtt": [
                "CertificateCertificateRequestorResource2890C6B7",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-721520867440-us-east-1",
          "S3Key": "ae967c277459e8936ac565a71d34ea5dcff7b98e556466c36a4d6da023a2d9aa.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WebBucketDeploymenttestAwsCliLayer41AD4280": {
      "Properties": {
        "Content": {
          "S3Bucket": "cdk-hnb659fds-assets-721520867440-us-east-1",
          "S3Key": "d21f8b6ad7cafde52be800b4bc2704085a5402ea7401fa71bd8f1e3f995c6068.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "WebBucketDeploymenttestCustomResource67E6BA9F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "WebBuckettest1D7CD72B",
        },
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          "cdk-hnb659fds-assets-721520867440-us-east-1",
        ],
        "SourceObjectKeys": [
          "b819ef79cb720c5587f437a6b48c215951488a0280cd694458b354a055614d07.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "WebBuckettest1D7CD72B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "chapter-8-web-bucket-akemxdjqkl-test",
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:c4f9ca93",
            "Value": "true",
          },
        ],
        "WebsiteConfiguration": {
          "ErrorDocument": "index.html",
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "WebBuckettestAutoDeleteObjectsCustomResource1818E070": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "WebBuckettestPolicyA2A62D61",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "WebBuckettest1D7CD72B",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "WebBuckettestPolicyA2A62D61": {
      "Properties": {
        "Bucket": {
          "Ref": "WebBuckettest1D7CD72B",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebBuckettest1D7CD72B",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebBuckettest1D7CD72B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebBuckettest1D7CD72B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
