name: deploy to temp stack

on:
  pull_request:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ACCOUNT_ID: 721520867440
  DOTENV_CONFIG_PATH: ./.env.dev
  STACK_NAME: FinalStack

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-deploy-test:
    runs-on: ubuntu-latest

    # this is required for authenticating to AWS via the OIDC Provider we set up
    permissions:
      id-token: write
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install infrastructure
        uses: cypress-io/github-action@v6
        with:
          runTests: false
          working-directory: infrastructure

      - name: Install web
        uses: cypress-io/github-action@v6
        with:
          runTests: false
          working-directory: web

      - name: Build infrastructure and web
        run: |
          cd infrastructure
          yarn build
          yarn build:frontend

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume:
            arn:aws:iam::${{ env.ACCOUNT_ID }}:role/GitHubActionsRole
          role-session-name: GithubActionsSession

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Lint infrastructure
        run: cd infrastructure && yarn lint

      - name: cdk synth
        run: |
          cd infrastructure && CDK_DEFAULT_ACCOUNT=${{ env.ACCOUNT_ID }} CDK_DEFAULT_REGION=${{ env.AWS_REGION }} NODE_ENV=${{ steps.branch-name.outputs.current_branch }} DOTENV_CONFIG_PATH=${{ env.DOTENV_CONFIG_PATH }} npx cdk synth

      - name: deploy to ${{ steps.branch-name.outputs.current_branch }}
        # configuring creds is not needed after using an IAM role provided through an OIDC Provider
        run: |
          cd infrastructure && NODE_ENV=${{ steps.branch-name.outputs.current_branch }} DOTENV_CONFIG_PATH=${{ env.DOTENV_CONFIG_PATH }} npx cdk deploy --require-approval never

      - name: Cypress e2e tests for backend api ðŸ§ª
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          install: false
          # record: true
          # group: e2e-tests
          # tag: branch-backend
          working-directory: infrastructure
        env:
          # CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ env.AWS_REGION }}

      - name: Get S3 bucket website URL
        run: |
          UI_BASE_URL=$(aws cloudformation describe-stacks --stack-name ${{ env.STACK_NAME}}-${{ steps.branch-name.outputs.current_branch }} --query "Stacks[0].Outputs[?OutputKey=='FrontendUrl'].OutputValue" --output text)
          echo "UI_BASE_URL=$UI_BASE_URL" >> $GITHUB_ENV
          echo "base url is ${{ env.UI_BASE_URL }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

      - name: Cypress e2e tests for front end ðŸ§ª
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          install: false
          config: baseUrl=${{ env.UI_BASE_URL }}
          # record: true
          # group: e2e-tests
          # tag: branch-front-end
          working-directory: web
        env:
          # CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
